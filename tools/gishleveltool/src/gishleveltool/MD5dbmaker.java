package gishleveltool;

import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilenameFilter;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MD5dbmaker extends javax.swing.JFrame {

    public static final int IMAGE_SIZE = 200;
    public static final int IMAGE_INBETWEEN = 20;
    public static final int TEXTFIELD_HEIGHT = 15;
    //public static final String sep = File.separator;
    public static final String sep = "/";
    public String editingTexture = null;
    public String comparingDirectory = "texture/";
    public myLM listmodel_md5db;
    public MD5db md5db;
    public String editingMD5;
    public FileTree filetree_left;
    public FileTree filetree_right;

    public class myLM implements ListModel, ComboBoxModel {

        int cm_selectedItem;
        private ArrayList<String> list = new ArrayList<String>();

        public int getSize() {
            return list.size();
        }

        public Object getElementAt(int index) {
            return list.get(index);
        }

        public void addListDataListener(ListDataListener l) {
            //throw new UnsupportedOperationException("Not supported yet.");
        }

        public void removeListDataListener(ListDataListener l) {
            //throw new UnsupportedOperationException("Not supported yet.");
        }

        public void addItem(String item) {
            list.add(item);
        }

        public void genDirItems() {
            list.add("");
            File f = new File("texture" + sep);
            String[] dlist = f.list(new FilenameFilter() {

                public boolean accept(File dir, String name) {
                    //System.out.println("name: " + name + " --- " + dir.toString());
                    return (new File(dir.toString() + sep + name).isDirectory());
                }
            });
            for (String s : dlist) {
                addItem(s);
            }
        }

        public void genFileItems(String directory) {
            File f = new File("texture" + sep + directory + sep);
            String[] dlist = f.list(new FilenameFilter() {

                public boolean accept(File dir, String name) {
                    //System.out.println("name: " + name + " --- " + dir.toString());
                    return name.endsWith(".png");
                }
            });
            for (String s : dlist) {
                addItem(s);
            }
        }

        public String get(int index) {
            return list.get(index);
        }

        public void clear() {
            list.clear();
        }

        public void setSelectedItem(Object anItem) {
            cm_selectedItem = list.indexOf(anItem);
        }

        public Object getSelectedItem() {
            return list.get(cm_selectedItem);
        }
    }

    /** Creates new form md5db_maker */
    public MD5dbmaker() {

        initComponents();
        md5db = new MD5db();

        listmodel_md5db = new myLM();

        jList2.setModel(listmodel_md5db);
        update_md5DBList();

        filetree_left = new FileTree(new File("texture"), this, true);
        filetree_left.setLocation(0, 0);
        filetree_left.setSize(jPanel5.getSize());
        jPanel5.add(filetree_left);

        filetree_right = new FileTree(new File("texture"), this, false);
        filetree_right.setLocation(0, 0);
        filetree_right.setSize(jPanel6.getSize());
        jPanel6.add(filetree_right);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jScrollPane4.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                jPanel1AncestorResized(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
        );

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 10));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setMaximumSize(new java.awt.Dimension(300, 32767));
        jPanel4.setMinimumSize(new java.awt.Dimension(300, 10));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 710));

        jList2.setFont(new java.awt.Font("Tahoma", 0, 10));
        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        jPanel6.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 316));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 314, Short.MAX_VALUE)
        );

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update all selfRefs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(49, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void editTexture(String texture) throws IOException, NoSuchAlgorithmException {
        File f = new File(texture);
        if (f.exists() && !f.isDirectory()) {
            editingTexture = texture;
            System.out.println("Editing texture:  " + editingTexture);
            //repaintThings();
            repaintLeftPanel();

        }
    }

    public void changeComparePath(String path) {
        File f = new File(path);
        if (f.exists() && f.isDirectory()) {
            comparingDirectory = path;
            System.err.println("Comparing directory: " + comparingDirectory);
            repaintThings();
        }
    }

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        //repaintThings();
    }//GEN-LAST:event_formAncestorResized

    private void jPanel1AncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jPanel1AncestorResized
        repaintThings();
    }//GEN-LAST:event_jPanel1AncestorResized

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "MD5db file", "md5db");
        chooser.setFileFilter(filter);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogType(JFileChooser.SAVE_DIALOG);

        int returnVal = chooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                String name = chooser.getSelectedFile().getAbsolutePath();
                if (name.indexOf('.') == -1) {
                    name += ".md5db";
                }
                md5db.save(name);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "MD5db file", "md5db");
        chooser.setFileFilter(filter);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogType(JFileChooser.OPEN_DIALOG);

        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                String name = chooser.getSelectedFile().getAbsolutePath();
                if (name.indexOf('.') == -1) {
                    name += ".md5db";
                }
                this.md5db = MD5db.load(name);
                update_md5DBList();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Leveltoolkit.update_selfRefs();
        } catch (IOException ex) {
            Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MD5dbmaker().setVisible(true);
            }
        });
    }

    public void repaintLeftPanel() throws IOException, NoSuchAlgorithmException {
        jPanel3.setSize(IMAGE_SIZE, IMAGE_SIZE);
        jPanel3.invalidate();
        jPanel3.removeAll();
        if (editingTexture != null) {
            editingMD5 = (Gishlevel.getMD5fromImage(new ImagePanel(this, jPanel3, editingTexture, jPanel3.getWidth(), jPanel3.getHeight(), false).image));
        }
        jTextField1.setText(editingMD5);
        jTextField1.setCaretPosition(0);
        jPanel3.repaint();
    }

    public void repaintThings() {
        try {
            repaintLeftPanel();
            jPanel2.removeAll();

            if (jPanel6 != null && filetree_right != null) {
                if (jPanel6.getSize() != null) {
                    filetree_right.setSize(jPanel6.getSize());
                }
            }
            if (jPanel5 != null && filetree_left != null) {
                if (jPanel5.getSize() != null) {
                    filetree_left.setSize(jPanel5.getSize());
                }
            }

            String fpath = comparingDirectory;
            File f = new File(fpath);
            String[] files = f.list(new FilenameFilter() {

                public boolean accept(File dir, String name) {
                    return (name.endsWith(".png"));
                }
            });
            int x = IMAGE_INBETWEEN;
            int y = IMAGE_INBETWEEN;
            int maxwidth = 0;
            for (String s : files) {
                //System.out.println("fp+s " + fpath + s);
                new ImagePanel(this, jPanel2, fpath + s, IMAGE_SIZE, IMAGE_SIZE, true).setLocation(x, y);
                x +=
                        IMAGE_SIZE + IMAGE_INBETWEEN;
                if (x + IMAGE_SIZE > jPanel2.getWidth()) {
                    maxwidth = x;
                    x =
                            IMAGE_INBETWEEN;
                    y +=
                            IMAGE_SIZE + IMAGE_INBETWEEN;
                }

            }
            Dimension d = new Dimension(maxwidth, y + IMAGE_INBETWEEN + IMAGE_SIZE);
            jPanel2.setSize(d);
            jPanel2.setPreferredSize(d);
            jPanel2.setMinimumSize(d);
            jPanel2.setMaximumSize(d);

            jPanel2.repaint();

        } catch (Exception ex) {
            Logger.getLogger(MD5dbmaker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void update_md5DBList() {
        listmodel_md5db.clear();
        for (String s : md5db.comments) {
            listmodel_md5db.addItem(s);
        }
        for (String s : md5db.getEntries()) {
            listmodel_md5db.addItem(s + " -> " + md5db.getFile(s));
        }

        //jPanel4.repaint();
        for (String s : listmodel_md5db.list) {
            System.out.println(s);
        }
        jList2.updateUI();
        //jList2.repaint();
    }

    public void addEntry(String filepath) {
        addEntry(editingMD5, filepath);
    }

    public void addEntry(String md5, String filepath) {
        md5db.put(md5, filepath);
        //System.out.println("PUT: " + editingMD5 + " -> " + filepath);
        update_md5DBList();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
